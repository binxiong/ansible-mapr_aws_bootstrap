# Set your AWS credentials.
aws_access_key:
aws_secret_key:

# ec2_regions is a dictionary with some fairly self-explanatory variables.
# Be sure to change the security groups, vpc-subnet and image.
ec2_regions:
  east-1a:
    region: us-east-1
    zone: us-east-1a
    keypair: 
    # How many nodes to request per region.
    cluster_node_type: d2.xlarge
    cluster_node_count: 3
    # Create ephemeral volumes. Example below is for d2.xlarge, which provides
    # three 2TB volumes. The data will be lost when the node is terminated or 
    # stopped.
    # Do not specify a size, or you will get an EBS volume.
    cluster_node_volumes:
      - device_name: /dev/xvdf
        ephemeral: ephemeral0
      - device_name: /dev/xvdg
        ephemeral: ephemeral1
      - device_name: /dev/xvdh
        ephemeral: ephemeral2
    # Create EBS volumes. Example below is for creating a 20GB volume that
    # could be mounted on /opt/mapr, and a 72GB volume to be used for MFS.
    #cluster_node_volumes:
    #  - device_name: /dev/xvdb
    #    volume_size: 20
    #    delete_on_termination: true
    #  - device_name: /dev/xvdf
    #    volume_size: 72
    #    delete_on_termination: true
    edge_node_type: m4.xlarge
    edge_node_count: 0
    # Create EBS volumes. Example below is for creating a 20GB volume that
    # could be mounted on /opt/mapr, and a 72GB volume to be used for MFS.
    edge_node_volumes:
      - device_name: /dev/xvdb
        volume_size: 20
        delete_on_termination: true
      - device_name: /dev/xvdf
        volume_size: 72
        delete_on_termination: true
    # If the node_price variables are set, ansible will request a spot instance.
    edge_node_price:
    spot_wait_timeout: 900
    cluster_node_price:
    security_group: [ ]
    vpc_subnet:
    image: ami-1ecae776 # Amazon Linux HVM, us-east-1
    assign_public_ip: no
    placement_group:
